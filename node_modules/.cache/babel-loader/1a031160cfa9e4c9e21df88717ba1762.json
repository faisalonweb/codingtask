{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/reacttask/src/components/common/Presentational/MoviesCategories/MoviesCategories.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport MovieSection from '../MovieSection/MovieSection';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MoviesCategories = () => {\n  _s();\n\n  const moviesCategories = useSelector(state => state.movies.moviesSections);\n  const [slicePointer, setSlicePointer] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [moviesSections, setMoviesSections] = useState([]);\n\n  const fetchMoreSection = () => {\n    setSlicePointer(prevState => prevState + 2);\n\n    if (slicePointer + 2 >= moviesCategories.length) {\n      setHasMore(false);\n    }\n\n    setTimeout(() => {\n      setMoviesSections(prevState => [...prevState.concat([...moviesCategories.slice(slicePointer, slicePointer + 2)])]);\n    }, 500);\n  };\n\n  useEffect(() => {\n    setMoviesSections([...moviesCategories.slice(slicePointer, slicePointer + 2)]);\n  }, [moviesCategories]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: moviesSections && moviesSections.length ? /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: moviesSections.length,\n      next: fetchMoreSection,\n      hasMore: hasMore,\n      loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }, this),\n      children: moviesSections.map((section, key) => /*#__PURE__*/_jsxDEV(MovieSection, {\n        title: section.title,\n        movieTitles: section.layoutTitles.titles\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MoviesCategories, \"wwtFf41nY3ve5eoavoMYwIakJ0o=\", false, function () {\n  return [useSelector];\n});\n\n_c = MoviesCategories;\nexport default MoviesCategories;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesCategories\");","map":{"version":3,"sources":["/Users/macbook/Desktop/reacttask/src/components/common/Presentational/MoviesCategories/MoviesCategories.jsx"],"names":["React","useState","useEffect","useSelector","MovieSection","InfiniteScroll","MoviesCategories","moviesCategories","state","movies","moviesSections","slicePointer","setSlicePointer","hasMore","setHasMore","setMoviesSections","fetchMoreSection","prevState","length","setTimeout","concat","slice","map","section","key","title","layoutTitles","titles"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;AACA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAMC,gBAAgB,GAAGJ,WAAW,CAAEK,KAAD,IAASA,KAAK,CAACC,MAAN,CAAaC,cAAvB,CAApC;AACA,QAAM,CAACC,YAAD,EAAcC,eAAd,IAAiCX,QAAQ,CAAC,CAAD,CAA/C;AACA,QAAM,CAACY,OAAD,EAASC,UAAT,IAAuBb,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACS,cAAD,EAAgBK,iBAAhB,IAAqCd,QAAQ,CAAC,EAAD,CAAnD;;AAEA,QAAMe,gBAAgB,GAAG,MAAM;AAC3BJ,IAAAA,eAAe,CAAEK,SAAD,IAAaA,SAAS,GAAG,CAA1B,CAAf;;AACC,QAAGN,YAAY,GAAG,CAAf,IAAoBJ,gBAAgB,CAACW,MAAxC,EAAgD;AAC5CJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAEDK,IAAAA,UAAU,CAAC,MAAM;AACdJ,MAAAA,iBAAiB,CAAEE,SAAD,IAAa,CAAC,GAAGA,SAAS,CAACG,MAAV,CAAiB,CAAC,GAAGb,gBAAgB,CAACc,KAAjB,CAAuBV,YAAvB,EAAoCA,YAAY,GAAC,CAAjD,CAAJ,CAAjB,CAAJ,CAAd,CAAjB;AACD,KAFQ,EAEN,GAFM,CAAV;AAGJ,GATD;;AAUAT,EAAAA,SAAS,CAAC,MAAI;AACZa,IAAAA,iBAAiB,CAAC,CAAC,GAAGR,gBAAgB,CAACc,KAAjB,CAAuBV,YAAvB,EAAoCA,YAAY,GAAG,CAAnD,CAAJ,CAAD,CAAjB;AACD,GAFQ,EAEP,CAACJ,gBAAD,CAFO,CAAT;AAIA,sBACI;AAAA,cACSG,cAAc,IAAIA,cAAc,CAACQ,MAAjC,gBACD,QAAC,cAAD;AACN,MAAA,UAAU,EAAER,cAAc,CAACQ,MADrB;AAEN,MAAA,IAAI,EAAEF,gBAFA;AAGN,MAAA,OAAO,EAAEH,OAHH;AAIN,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,gBAOAH,cAAc,CAACY,GAAf,CAAmB,CAACC,OAAD,EAASC,GAAT,kBACjB,QAAC,YAAD;AAAwB,QAAA,KAAK,EAAED,OAAO,CAACE,KAAvC;AAA8C,QAAA,WAAW,EAAEF,OAAO,CAACG,YAAR,CAAqBC;AAAhF,SAAmBH,GAAnB;AAAA;AAAA;AAAA;AAAA,cADF;AAPA;AAAA;AAAA;AAAA;AAAA,YADC,GAaH;AAdN;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAvCD;;GAAMlB,gB;UACuBH,W;;;KADvBG,gB;AAyCN,eAAeA,gBAAf","sourcesContent":["import React , {useState,useEffect} from 'react'\nimport { useSelector } from 'react-redux'\nimport MovieSection from '../MovieSection/MovieSection';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nconst MoviesCategories = () => {\n    const moviesCategories = useSelector((state)=>state.movies.moviesSections);\n    const [slicePointer,setSlicePointer] = useState(0);\n    const [hasMore,setHasMore] = useState(true);\n    const [moviesSections,setMoviesSections] = useState([]);\n     \n    const fetchMoreSection = () => {\n        setSlicePointer((prevState)=>prevState + 2);\n         if(slicePointer + 2 >= moviesCategories.length) {\n             setHasMore(false);\n         }\n\n         setTimeout(() => {\n            setMoviesSections((prevState)=>[...prevState.concat([...moviesCategories.slice(slicePointer,slicePointer+2)])]);\n          }, 500);\n    }\n    useEffect(()=>{\n      setMoviesSections([...moviesCategories.slice(slicePointer,slicePointer + 2)]);\n    },[moviesCategories])\n    \n    return (\n        <div> \n            {    moviesSections && moviesSections.length ?\n                <InfiniteScroll\n          dataLength={moviesSections.length}\n          next={fetchMoreSection}\n          hasMore={hasMore}\n          loader={<h4>Loading...</h4>}\n           >\n            {\n                moviesSections.map((section,key)=>(\n                  <MovieSection key={key} title={section.title} movieTitles={section.layoutTitles.titles} />\n                ))\n            }\n            </InfiniteScroll>\n            : \"\"\n         }\n        </div>\n    )\n}\n\nexport default MoviesCategories\n"]},"metadata":{},"sourceType":"module"}